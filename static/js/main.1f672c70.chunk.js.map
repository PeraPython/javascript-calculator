{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_home_marko_FreeCodeCamp_js_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_marko_FreeCodeCamp_js_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_marko_FreeCodeCamp_js_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","expression","currentNum","display","wasCalculate","test","handleClick","bind","_home_marko_FreeCodeCamp_js_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","clear","sumAll","operators","indexOf","length","sum","eval","sum1","setState","e","text","target","innerText","slice","react__WEBPACK_IMPORTED_MODULE_6___default","className","id","onClick","Component"],"mappings":"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","file":"static/js/main.1f672c70.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      expression: \"\",\n      currentNum: \"\",\n      display: false,\n      wasCalculate: false,\n      test: \"\"\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.clear = this.clear.bind(this);\n    this.sumAll = this.sumAll.bind(this);\n  }\n\n  sumAll(){\n    const operators = ['+', '-', '*', '/'];\n    if(operators.indexOf(this.state.currentNum) !== -1 || this.state.currentNum[this.state.currentNum.length-1] === \".\" || this.state.wasCalculate){\n      return;\n    }\n    const sum = eval(this.state.expression);\n    const sum1 = this.state.expression + \"=\" + sum;\n    this.setState({ expression: sum1, currentNum: sum, wasCalculate: true })\n  }\n\n  clear(){\n    this.setState({expression: \"\", currentNum: \"\", display: false});\n  }\n\n  handleClick(e){\n    const operators = ['+', '-', '*', '/']\n    const text = e.target.innerText;\n    let { expression } = this.state;\n    let { currentNum } = this.state;\n    //The case if the calculation was done\n    if(expression.indexOf(\"=\") !== -1){\n      if(operators.indexOf(text) === -1 && text !== \".\"){\n        expression = text;\n        currentNum = text;\n      } else if(text === \".\"){\n        expression = \"0.\";\n        currentNum = \"0.\";\n      } else {\n        expression = currentNum + text;\n        currentNum = text;\n      }\n      this.setState({expression, currentNum, wasCalculate: false});\n      return;\n    }\n    //Prevents multiple dots\n    if(text === \".\" && currentNum.indexOf(\".\") !== -1){\n      return;\n    }\n    //Adds 0 if next value begin with dot (.)\n    if(text === \".\" && (!currentNum || operators.indexOf(expression[expression.length-1]) !== -1)){\n      currentNum = \"0\";\n      expression += \"0\";\n    }\n    //Prevents beginning of the mathematical expression with an aritmetic function\n    if(!expression && (text === '+' || text === '-' || text === '/' || text === '*' || text ==='0')){\n      return;\n    }\n    expression += text;\n    //Prevents using of multiple operators consecutively\n    if(operators.indexOf(text) !== -1){\n      if(operators.indexOf(currentNum) !== -1){\n        expression = expression.slice(0, expression.length-2) + text;\n        currentNum = text;\n      } else{\n        currentNum = text;\n      }\n    } else{\n      if(operators.indexOf(currentNum) === -1){\n        currentNum += text;\n      } else {\n        currentNum = text;\n      }\n    }\n    this.setState({ expression, currentNum, display: true, wasCalculate: false })    \n  }\n\n  render() {\n    return (\n      <div className=\"calculator\">\n        <div id=\"screen\">\n          <div id=\"expression\">{this.state.display && this.state.expression}</div>\n          <div id=\"display\">{!this.state.currentNum ? \"0\" : this.state.currentNum}</div>\n        </div>\n        <div id=\"keyboard\">\n          <div className=\"column\">\n            <div className=\"row\">\n              <div id=\"clear\" className=\"pad\" onClick={this.clear}>\n                <span>AC</span>\n              </div>\n              <div id=\"divide\" className=\"pad\" onClick={this.handleClick}>\n                <span>/</span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div id=\"seven\" className=\"pad\" onClick={this.handleClick}>\n                <span>7</span>\n              </div>\n              <div id=\"eight\" className=\"pad\" onClick={this.handleClick}>\n                <span>8</span>\n              </div>\n              <div id=\"nine\" className=\"pad\" onClick={this.handleClick}>\n                <span>9</span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div id=\"four\" className=\"pad\" onClick={this.handleClick}>\n                <span>4</span>\n              </div>\n              <div id=\"five\" className=\"pad\" onClick={this.handleClick}>\n                <span>5</span>\n              </div>\n              <div id=\"six\" className=\"pad\" onClick={this.handleClick}>\n                <span>6</span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div id=\"one\" className=\"pad\" onClick={this.handleClick}>\n                <span>1</span>\n              </div>\n              <div id=\"two\" className=\"pad\" onClick={this.handleClick}>\n                <span>2</span>\n              </div>\n              <div id=\"three\" className=\"pad\" onClick={this.handleClick}>\n                <span>3</span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div id=\"zero\" className=\"pad\" onClick={this.handleClick}>\n                <span>0</span>\n              </div>\n              <div id=\"decimal\" className=\"pad\" onClick={this.handleClick}>\n                <span>.</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div id=\"multiply\" className=\"pad\" onClick={this.handleClick}>\n              <span>*</span>\n            </div>\n            <div id=\"subtract\" className=\"pad\" onClick={this.handleClick}>\n              <span>-</span>\n            </div>\n            <div id=\"add\" className=\"pad\" onClick={this.handleClick}>\n              <span>+</span>\n            </div>\n            <div id=\"equals\" className=\"pad\" onClick={this.sumAll}>\n              <span>=</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"sourceRoot":""}